# Signalling the pod to reload when the configmap changes is one of the most
# requested k8s features and should arrive soon -
# https://github.com/kubernetes/kubernetes/issues/22368
#
# For now, we have added a version number to the end of the configmap name.
# When you change the configmap, increment the number in the ConfigMap as well
# as in the volumes of the pod.  If we end up with zillions of versions of the
# ConfigMap we may end up needing to do garbage collection, but it would take a
# *lot* of versions to cause such a problem, as this configmap is a very small
# number of bytes.
apiVersion: v1
kind: ConfigMap
metadata:
  name: nodeinfo-config-1
data:
  config.json: |
    [
      {
        "Dataype": "lshw",
        "Filename": "lshw.json",
        "Cmd":      ["lshw", "-json"]
      },
      {
        "Dataype": "lspci",
        "Filename": "lspci.txt",
        "Cmd":      ["lspci", "-mm", "-vv", "-k", "-nn"]
      },
      {
        "Dataype": "lsusb",
        "Filename": "lsusb.txt",
        "Cmd":      ["lsusb", "-v"]
      },
      {
        "Dataype": "ip-address",
        "Filename": "ip-address.txt",
        "Cmd":      ["ip", "address", "show"]
      },
      {
        "Dataype": "ip-route-4",
        "Filename": "ip-route-4.txt",
        "Cmd":      ["ip", "-4", "route", "show"]
      },
      {
        "Dataype": "ip-route-6",
        "Filename": "ip-route-6.txt",
        "Cmd":      ["ip", "-6", "route", "show"]
      },
      {
        "Dataype": "uname",
        "Filename": "uname.txt",
        "Cmd":      ["uname", "-a"]
      },
      {
        "Dataype": "os-release",
        "Filename": "os-release.txt",
        "Cmd":      ["cat", "/etc/os-release"]
      },
      {
        "Dataype": "bios_version",
        "Filename": "bios_version.txt",
        "Cmd":      ["cat", "/sys/class/dmi/id/bios_version"]
      },
      {
        "Dataype": "chassis_serial",
        "Filename": "chassis_serial.txt",
        "Cmd":      ["cat", "/sys/class/dmi/id/chassis_serial"]
      }
    ]
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: nodeinfo
  name: nodeinfo
spec:
  selector:
    matchLabels:
      app: nodeinfo
  updateStrategy:
    type: RollingUpdate

  template:
    metadata:
      labels:
        app: nodeinfo
      annotations:
        prometheus.io/scrape: 'true'
    spec:
      serviceAccountName: kube-rbac-proxy

      nodeSelector:
        mlab/type: 'platform'
      hostNetwork: true
      hostPID: true
      containers:
      - name: nodeinfo
        image: measurementlab/nodeinfo:v0.3
        args:
        - -datadir=/var/spool/nodeinfo
        - -wait=1h
        - -prometheusx.listen-address=127.0.0.1:9990
        - -config=/nodeinfoconfig/config.json
        volumeMounts:
        - name: nodeinfo-config
          mountPath: /nodeinfoconfig
        - name: nodeinfo-data
          mountPath: /var/spool/nodeinfo

      - name: kube-rbac-proxy-nodeinfo
        image: quay.io/coreos/kube-rbac-proxy:v0.4.1
        args:
        - --logtostderr
        - --secure-listen-address=$(IP):9990
        - --upstream=http://127.0.0.1:9990/
        env:
        - name: IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        ports:
        - containerPort: 9990
          hostPort: 9990

      - name: pusher
        image: measurementlab/pusher:v1.8
        args:
        - -prometheusx.listen-address=127.0.0.1:9991
        - -sigterm_wait_time=20s
        - -experiment=nodeinfo
        - -archive_size_threshold=50MB
        - -directory=/var/spool/nodeinfo
        - -datatype=lspci
        - -datatype=lsusb
        - -datatype=ifconfig
        - -datatype=route
        - -datatype=uname
        - -datatype=lshw
        env:
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/credentials/pusher.json
        - name: BUCKET
          valueFrom:
            configMapKeyRef:
              name: pusher-dropbox
              key: bucket
        - name: MLAB_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        volumeMounts:
        - name: nodeinfo-data
          mountPath: /var/spool/nodeinfo
        - name: pusher-credentials
          mountPath: /etc/credentials
          readOnly: true

      - name: kube-rbac-proxy-pusher
        image: quay.io/coreos/kube-rbac-proxy:v0.4.1
        args:
        - --logtostderr
        - --secure-listen-address=$(IP):9991
        - --upstream=http://127.0.0.1:9991/
        env:
        - name: IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        ports:
        - containerPort: 9991
          hostPort: 9991

      volumes:
      - name: nodeinfo-config
        configMap:
          name: nodeinfo-config-1
      - name: nodeinfo-data
        hostPath:
          path: /cache/data/node/nodeinfo
          type: DirectoryOrCreate
      - name: pusher-credentials
        secret:
          secretName: pusher-credentials
      - name: uuid-prefix
        emptyDir: {}
